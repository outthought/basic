---

- name: get ssh key for remote run
  hosts: localhost
  connection: local
  gather_facts: false
  environment:
    AWS_DEFAULT_REGION: "{{ region }}"
  pre_tasks:
  - name: Create temporary directory
    file:
      path: "{{ playbook_dir }}/tmp"
      state: directory
  - name: Fetch private key to local file
    copy:
      content: "{{ lookup('aws_ssm', '/techops/security/qualys/qualys_ami_test') }}"
      dest: "{{ playbook_dir }}/tmp/{{ environ }}.key"
      mode: 0600

- name: deploy server
  hosts:
    - ubuntu16
    # - amazon1
  gather_facts: false
  #run_once: "{{ run_once | default(False) }}"
  environment:
    AWS_DEFAULT_REGION: "{{ region }}"
  vars:
    ansible_ssh_private_key_file: "{{ playbook_dir }}/tmp/{{ environ }}.key"
    ansible_asg_groups:
      Instance: 'qualys'
    image_group: ubuntu16
    image_type: t2.small
    keypair_name: "qualys_ami_test_deploy"
    group: "internal"
    termination_protection: false
    stack_instance_tags:
      Name: "{{ inventory_hostname }}"
      "sps:owner": "techops@spscommerce.com"
      "sps:unit": "techops"
      "sps:env": "{{ environ }}"
      "sps:hours_of_operation": "0000-2359"
      "sps:product": "security"
      "sps:subproduct": "qualys"
    stack_name: "{{ environ }}-{{ shortname }}"
    stack_use_iam: False

  roles:
    - name: stack role
      role: stack
      delegate_to: localhost
      delegate_facts: true

#- name: remove sudo requiretty so we can use pipelining
#  hosts: example_servers
#  ansible_ssh_pipelining: no
#  become: yes
#  vars:
#    ansible_ssh_private_key_file: "tmp/{{ environ }}.key"
#  tasks:
#    - name: remove requiretty
#      lineinfile:
#        dest: /etc/sudoers
#        line: 'Defaults    requiretty'
#        state: absent
#      tags: notty
##
##
#- name: Remove ssh keys at the end of the run
#  hosts: localhost
#  connection: local
#  gather_facts: false
#  environment:
#    AWS_DEFAULT_REGION: "{{ region }}"
#  tasks:
#    - name: list ssh keys
#      find:
#        paths: tmp
#        patterns: "*key"
#      register: ssh_keys
#      tags: find_ssh
#    - name: remove ssh keys
#      file:
#        path: "{{ item.path }}"
#        state: absent
#      with_items: "{{ ssh_keys.files }}"
#      tags: find_ssh
#      changed_when: False

# - name:
#   hosts:
#   vars:
#   pre_tasks:
#   roles:
#   tasks:
#   post_tasks:
